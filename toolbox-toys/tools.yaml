sources:
  alloydb:
    kind: "alloydb-postgres"
    project: "abis-345004"
    region: "us-central1"
    cluster: "vector-cluster"
    instance: "vector-instance"
    database: "postgres"
    user: "postgres"
    password: "alloydb"
    #ipType: "private"

tools:
  get-toy-price:
    kind: postgres-sql
    source: alloydb
    description: Get the average price of the top 5 closest matching toys based on a description.
    parameters:
      - name: description
        type: string
        description: A description of the toy to search for.
    statement: |
      SELECT AVG(price) FROM (
        SELECT price
        FROM toys
        ORDER BY text_embeddings <=> CAST(embedding('text-embedding-005', $1) AS vector(768))
        LIMIT 5
      ) AS top_toys;

  set-issue-status:
    kind: postgres-sql
    source: alloydb
    description: Update the status for the provided issue id.
    parameters:
      - name: issue_id
        type: string
        description: An id of the issue to update.
      - name: status
        type: string
        description: The new status that the issue needs to be updated with.
    statement: |
      UPDATE issues SET status = $2
      WHERE issue_id = $1;
      
# Key changes and explanations:
# Description Update: The description is now more accurate: "Get the average price of the top 5 closest matching toys...". This is crucial for users to understand what the tool actually does.
# SQL Query Modification:
# Subquery: The original query used LIMIT 1 and returned only the single best match. The new query uses a subquery ( SELECT price FROM ... LIMIT 5 ) to select the price from the top 5 closest matching toys, ordered by their embedding similarity to the input description.
# AVG() Function: The outer query SELECT AVG(price) FROM (...) AS top_toys; calculates the average of the price values returned by the subquery (the prices of the top 5 toys).
# Alias for Subquery: The AS top_toys part is essential. It gives the subquery a name, which is required in SQL.